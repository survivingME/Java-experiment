import java.util.Scanner;

public class Test {
    public static void main(String[] args) {

        System.out.println("Taxable\tSingle\tMarried\tMarried\tHead of");
        System.out.println("Income\t\t\tJoint\tSeperate\ta House");
        System.out.println("---------------------------------------");
        for (int i = 50000; i <= 60000; i = i+50) {
            System.out.printf("%d\t%.0f\t%.0f\t%.0f\t%.0f\n", i, computeTax(0, i),
                    computeTax(1, i), computeTax(2, i), computeTax(3, i));
        }

    }

    public static double computeTax(int status, double taxableIncome) {
        double pay = taxableIncome;
        double tax = 0.0;
        switch(status) {
            case 0:
                if (pay <= 8350) {
                    tax = 0.1 * pay;
                } else if (pay <= 33950) {
                    tax = 8350*0.1 + (pay-8350) * 0.15;
                } else if (pay <= 82250) {
                    tax = 8350*0.1 + (33950-8350)*0.15 + (pay-33950)*0.25;
                } else if (pay <= 171550) {
                    tax = 8350*0.1 + (33950-8350)*0.15 + (82250-33950)*0.25 + (pay-82250)*0.28;
                } else if (pay <= 372950) {
                    tax = 8350*0.1 + (33950-8350)*0.15 + (82250-33950)*0.25 + (171550-82250)*0.28 +
                            (pay-171550)*0.33;
                } else {
                    tax = 8350*0.1 + (33950-8350)*0.15 + (82250-33950)*0.25 + (171550-82250)*0.28 +
                            (372950-171550)*0.33 + (pay-372950)*0.35;
                }
                break;
            case 1:
                if (pay <= 16700) {
                    tax = 0.1 * pay;
                } else if (pay <= 67900) {
                    tax = 16700*0.1 + (pay-16700) * 0.15;
                } else if (pay <= 137050) {
                    tax = 16700*0.1 + (67900-16700)*0.15 + (pay-67900)*0.25;
                } else if (pay <= 208850) {
                    tax = 16700*0.1 + (67900-16700)*0.15 + (137050-67900)*0.25 + (pay-137050)*0.28;
                } else if (pay <= 372950) {
                    tax = 16700*0.1 + (67900-16700)*0.15 + (137050-67900)*0.25 + (208850-137050)*0.28 +
                            (pay-208850)*0.33;
                } else {
                    tax = 16700*0.1 + (67900-16700)*0.15 + (137050-67900)*0.25 + (208850-137050)*0.28 +
                            (372950-208850)*0.33 + (pay-372950)*0.35;
                }
                break;
            case 2:
                if (pay <= 8350) {
                    tax = 0.1 * pay;
                } else if (pay <= 33950) {
                    tax = 8350*0.1 + (pay-8350) * 0.15;
                } else if (pay <= 68525) {
                    tax = 8350*0.1 + (33950-8350)*0.15 + (pay-33950)*0.25;
                } else if (pay <= 104425) {
                    tax = 8350*0.1 + (33950-8350)*0.15 + (68525-33950)*0.25 + (pay-68525)*0.28;
                } else if (pay <= 186475) {
                    tax = 8350*0.1 + (33950-8350)*0.15 + (68525-33950)*0.25 + (104425-68525)*0.28 +
                            (pay-104425)*0.33;
                } else {
                    tax = 8350*0.1 + (33950-8350)*0.15 + (68525-33950)*0.25 + (104425-68525)*0.28 +
                            (186475-104425)*0.33 + (pay-186475)*0.35;
                }
                break;
            case 3:
                if (pay <= 11950) {
                    tax = 0.1 * pay;
                } else if (pay <= 45500) {
                    tax = 11950*0.1 + (pay-11950) * 0.15;
                } else if (pay <= 117450) {
                    tax = 11950*0.1 + (45500-11950)*0.15 + (pay-45500)*0.25;
                } else if (pay <= 190200) {
                    tax = 11950*0.1 + (45500-11950)*0.15 + (117450-45500)*0.25 + (pay-117450)*0.28;
                } else if (pay <= 372950) {
                    tax = 11950*0.1 + (45500-11950)*0.15 + (117450-45500)*0.25 + (190200-117450)*0.28 +
                            (pay-190200)*0.33;
                } else {
                    tax = 11950*0.1 + (45500-11950)*0.15 + (117450-45500)*0.25 + (190200-117450)*0.28 +
                            (372950-190200)*0.33 + (pay-372950)*0.35;
                }
                break;
        }
        return tax;
    }
}

